/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.simon.src.game.states.cardcrafter;

import javax.swing.DefaultComboBoxModel;
import org.newdawn.slick.Color;
import org.simon.src.game.data.gameplay.cards.CardLibrary;

/**
 *
 * @author emil.simon
 */
public class CardCrafterFrame extends javax.swing.JFrame {
    
    public boolean flag_next=false;
    public boolean flag_prev=false;
    public boolean flag_save=false;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        frameNewPack = new javax.swing.JFrame();
        labelNewPackName = new javax.swing.JLabel();
        fieldNewPackName = new javax.swing.JTextField();
        btnNewPackConfirm = new javax.swing.JButton();
        frameSaveCardConfirm = new javax.swing.JFrame();
        labelNewCardId = new javax.swing.JLabel();
        fieldNewCardId = new javax.swing.JTextField();
        btnSaveCardConfirm = new javax.swing.JButton();
        comboCardPack = new javax.swing.JComboBox<>();
        btnSaveToPack = new javax.swing.JButton();
        labelSaveTo = new javax.swing.JLabel();
        labelName = new javax.swing.JLabel();
        fieldName = new javax.swing.JTextField();
        labelDescription = new javax.swing.JLabel();
        scrollDescription = new javax.swing.JScrollPane();
        fieldDescription = new javax.swing.JTextArea();
        labelAction = new javax.swing.JLabel();
        fieldAction = new javax.swing.JTextField();
        sep = new javax.swing.JSeparator();
        btnNext = new javax.swing.JButton();
        btnPrevious = new javax.swing.JButton();
        labelPortrait = new javax.swing.JLabel();
        panelPointCost = new javax.swing.JPanel();
        labelPointCostAttack = new javax.swing.JLabel();
        labelPointCostDefence = new javax.swing.JLabel();
        labelPointCostAgility = new javax.swing.JLabel();
        labelPointCostArcane = new javax.swing.JLabel();
        labelPointCostNature = new javax.swing.JLabel();
        labelPointCostDivine = new javax.swing.JLabel();
        labelPointCostDeath = new javax.swing.JLabel();
        spinnerPointCostDeath = new javax.swing.JSpinner();
        spinnerPointCostDivine = new javax.swing.JSpinner();
        spinnerPointCostNature = new javax.swing.JSpinner();
        spinnerPointCostArcane = new javax.swing.JSpinner();
        spinnerPointCostAgility = new javax.swing.JSpinner();
        spinnerPointCostDefence = new javax.swing.JSpinner();
        spinnerPointCostAttack = new javax.swing.JSpinner();
        colorPicker = new javax.swing.JColorChooser();
        btnNewPack = new javax.swing.JButton();

        frameNewPack.setTitle("New Card Pack");

        labelNewPackName.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        labelNewPackName.setText("New Pack Name:");

        fieldNewPackName.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N

        btnNewPackConfirm.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        btnNewPackConfirm.setText("Save");
        btnNewPackConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewPackConfirmActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout frameNewPackLayout = new javax.swing.GroupLayout(frameNewPack.getContentPane());
        frameNewPack.getContentPane().setLayout(frameNewPackLayout);
        frameNewPackLayout.setHorizontalGroup(
            frameNewPackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frameNewPackLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(frameNewPackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(frameNewPackLayout.createSequentialGroup()
                        .addComponent(labelNewPackName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(fieldNewPackName, javax.swing.GroupLayout.DEFAULT_SIZE, 296, Short.MAX_VALUE))
                    .addComponent(btnNewPackConfirm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        frameNewPackLayout.setVerticalGroup(
            frameNewPackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, frameNewPackLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(frameNewPackLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldNewPackName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelNewPackName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addComponent(btnNewPackConfirm)
                .addContainerGap())
        );

        frameSaveCardConfirm.setTitle("Save Card");

        labelNewCardId.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        labelNewCardId.setText("New Card ID:");

        fieldNewCardId.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N

        btnSaveCardConfirm.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        btnSaveCardConfirm.setText("Save");
        btnSaveCardConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveCardConfirmActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout frameSaveCardConfirmLayout = new javax.swing.GroupLayout(frameSaveCardConfirm.getContentPane());
        frameSaveCardConfirm.getContentPane().setLayout(frameSaveCardConfirmLayout);
        frameSaveCardConfirmLayout.setHorizontalGroup(
            frameSaveCardConfirmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, frameSaveCardConfirmLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(frameSaveCardConfirmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnSaveCardConfirm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(frameSaveCardConfirmLayout.createSequentialGroup()
                        .addComponent(labelNewCardId)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(fieldNewCardId, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)))
                .addContainerGap())
        );
        frameSaveCardConfirmLayout.setVerticalGroup(
            frameSaveCardConfirmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frameSaveCardConfirmLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(frameSaveCardConfirmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldNewCardId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelNewCardId))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(btnSaveCardConfirm)
                .addContainerGap())
        );

        setTitle("Card Crafter");
        setResizable(false);

        comboCardPack.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        comboCardPack.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnSaveToPack.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        btnSaveToPack.setText("Save Card to Chosen Pack");
        btnSaveToPack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveToPackActionPerformed(evt);
            }
        });

        labelSaveTo.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        labelSaveTo.setText("Choose card pack:");

        labelName.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        labelName.setText("Name: ");

        fieldName.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N

        labelDescription.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        labelDescription.setText("Description:");

        fieldDescription.setColumns(20);
        fieldDescription.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        fieldDescription.setRows(5);
        scrollDescription.setViewportView(fieldDescription);

        labelAction.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        labelAction.setText("Action:");

        fieldAction.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N

        btnNext.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        btnNext.setText("Next");
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });

        btnPrevious.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        btnPrevious.setText("Previous");
        btnPrevious.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviousActionPerformed(evt);
            }
        });

        labelPortrait.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        labelPortrait.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelPortrait.setText("Portrait: 'hello/world'");

        panelPointCost.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        panelPointCost.setToolTipText("");

        labelPointCostAttack.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        labelPointCostAttack.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        labelPointCostAttack.setText("Attack: ");

        labelPointCostDefence.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        labelPointCostDefence.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        labelPointCostDefence.setText("Defence: ");

        labelPointCostAgility.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        labelPointCostAgility.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        labelPointCostAgility.setText("Agility: ");

        labelPointCostArcane.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        labelPointCostArcane.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        labelPointCostArcane.setText("Arcane: ");

        labelPointCostNature.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        labelPointCostNature.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        labelPointCostNature.setText("Nature: ");

        labelPointCostDivine.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        labelPointCostDivine.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        labelPointCostDivine.setText("Divine: ");

        labelPointCostDeath.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        labelPointCostDeath.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        labelPointCostDeath.setText("Death: ");

        spinnerPointCostDeath.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        spinnerPointCostDeath.setPreferredSize(new java.awt.Dimension(65, 20));

        spinnerPointCostDivine.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N

        spinnerPointCostNature.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N

        spinnerPointCostArcane.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N

        spinnerPointCostAgility.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N

        spinnerPointCostDefence.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N

        spinnerPointCostAttack.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N

        javax.swing.GroupLayout panelPointCostLayout = new javax.swing.GroupLayout(panelPointCost);
        panelPointCost.setLayout(panelPointCostLayout);
        panelPointCostLayout.setHorizontalGroup(
            panelPointCostLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPointCostLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelPointCostLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(labelPointCostDeath, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelPointCostDivine, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelPointCostNature, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelPointCostArcane, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelPointCostAgility, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelPointCostDefence, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                    .addComponent(labelPointCostAttack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelPointCostLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(spinnerPointCostAttack)
                    .addComponent(spinnerPointCostAgility)
                    .addComponent(spinnerPointCostDivine)
                    .addComponent(spinnerPointCostDeath, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(spinnerPointCostNature, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(spinnerPointCostArcane, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(spinnerPointCostDefence, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelPointCostLayout.setVerticalGroup(
            panelPointCostLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPointCostLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelPointCostLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spinnerPointCostAttack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelPointCostAttack))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelPointCostLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spinnerPointCostDefence, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelPointCostDefence))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelPointCostLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spinnerPointCostAgility, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelPointCostAgility))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelPointCostLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spinnerPointCostArcane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelPointCostArcane))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelPointCostLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spinnerPointCostNature, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelPointCostNature))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelPointCostLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spinnerPointCostDivine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelPointCostDivine))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelPointCostLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spinnerPointCostDeath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelPointCostDeath))
                .addContainerGap())
        );

        colorPicker.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N

        btnNewPack.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        btnNewPack.setText("New Pack");
        btnNewPack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewPackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelSaveTo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(comboCardPack, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(btnNewPack, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 282, Short.MAX_VALUE)
                        .addComponent(btnSaveToPack, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(scrollDescription, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelAction)
                        .addGap(18, 18, 18)
                        .addComponent(fieldAction))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelName)
                        .addGap(18, 18, 18)
                        .addComponent(fieldName))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnPrevious)
                        .addGap(18, 18, 18)
                        .addComponent(labelPortrait, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(sep)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelDescription)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(panelPointCost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(colorPicker, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelName))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fieldAction, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelAction))
                .addGap(18, 18, 18)
                .addComponent(labelDescription)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(colorPicker, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(panelPointCost, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnPrevious, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelPortrait, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(sep, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnNewPack, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelSaveTo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnSaveToPack)
                        .addComponent(comboCardPack, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        flag_next = true;
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnPreviousActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviousActionPerformed
        flag_prev = true;
    }//GEN-LAST:event_btnPreviousActionPerformed

    private void btnNewPackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewPackActionPerformed
        this.frameNewPack.setVisible(true);
    }//GEN-LAST:event_btnNewPackActionPerformed

    private void btnNewPackConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewPackConfirmActionPerformed
        if (!fieldNewPackName.getText().isEmpty()) {
            CardLibrary.createNewPack(fieldNewPackName.getText());
            this.frameNewPack.setVisible(false);
            this.comboCardPack.setModel(new DefaultComboBoxModel(CardLibrary.getLoadedCardPacks()));
            this.comboCardPack.setSelectedIndex(-1);
        }
    }//GEN-LAST:event_btnNewPackConfirmActionPerformed

    private void btnSaveToPackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveToPackActionPerformed
        frameSaveCardConfirm.setVisible(true);
    }//GEN-LAST:event_btnSaveToPackActionPerformed

    private void btnSaveCardConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveCardConfirmActionPerformed
        if (!fieldNewCardId.getText().isEmpty()) {
            flag_save = true;
            this.frameSaveCardConfirm.setVisible(false);
        }
    }//GEN-LAST:event_btnSaveCardConfirmActionPerformed

    
    
    public CardCrafterFrame () {
        super();
        initComponents();
        
        this.frameNewPack.setSize(356, 128);
        this.frameSaveCardConfirm.setSize(356, 128);
        
        this.comboCardPack.setModel(new DefaultComboBoxModel(CardLibrary.getLoadedCardPacks()));
        this.comboCardPack.setSelectedIndex(-1);
    }
    
    
    
    public static void main(String args[]) {
        // auto-generated "look-and-feel" setting
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CardCrafterFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        // end of auto-generated
        
        java.awt.EventQueue.invokeLater(() -> {
            new CardCrafterFrame().setVisible(true);
        });
    }
    
    
    
    public String getId () {
        return this.fieldNewCardId.getText();
    }
    
    public String getActionValue () {
        if (this.fieldAction!=null) return this.fieldAction.getText();
        return "";
    }
    
    public String getNameValue () {
        if (this.fieldName!=null) return this.fieldName.getText();
        return "";
    }
    
    public String getDescriptionValue () {
        if (this.fieldDescription!=null) return this.fieldDescription.getText();
        return "";
    }
    
    public String getCurrentCardPackName () {
        return this.comboCardPack.getSelectedItem().toString();
    }
    
    public int getPointAttack () {
        return Integer.parseInt(spinnerPointCostAttack.getValue().toString());
    }
    
    public int getPointDefence () {
        return Integer.parseInt(spinnerPointCostDefence.getValue().toString());
    }
    
    public int getPointAgility () {
        return Integer.parseInt(spinnerPointCostAgility.getValue().toString());
    }
    
    public int getPointDivine () {
        return Integer.parseInt(spinnerPointCostDivine.getValue().toString());
    }
    
    public int getPointDeath () {
        return Integer.parseInt(spinnerPointCostDeath.getValue().toString());
    }
    
    public int getPointNature () {
        return Integer.parseInt(spinnerPointCostNature.getValue().toString());
    }
    
    public int getPointArcane () {
        return Integer.parseInt(spinnerPointCostArcane.getValue().toString());
    }
    
    public Color getColor () {
        float r = (float)(this.colorPicker.getColor().getRed()) / 255f;
        float g = (float)(this.colorPicker.getColor().getGreen()) / 255f;
        float b = (float)(this.colorPicker.getColor().getBlue()) / 255f;
        float a = (float)(this.colorPicker.getColor().getAlpha()) / 255f;
        
        Color col = new Color (r,g,b,a);
        return col;
    }
    
    public void setIconLabelValue (String icon) {
        if (this.labelPortrait!=null) this.labelPortrait.setText(icon);
    }
            
            

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNewPack;
    private javax.swing.JButton btnNewPackConfirm;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnPrevious;
    private javax.swing.JButton btnSaveCardConfirm;
    private javax.swing.JButton btnSaveToPack;
    private javax.swing.JColorChooser colorPicker;
    private javax.swing.JComboBox<String> comboCardPack;
    private javax.swing.JTextField fieldAction;
    private javax.swing.JTextArea fieldDescription;
    private javax.swing.JTextField fieldName;
    private javax.swing.JTextField fieldNewCardId;
    private javax.swing.JTextField fieldNewPackName;
    private javax.swing.JFrame frameNewPack;
    private javax.swing.JFrame frameSaveCardConfirm;
    private javax.swing.JLabel labelAction;
    private javax.swing.JLabel labelDescription;
    private javax.swing.JLabel labelName;
    private javax.swing.JLabel labelNewCardId;
    private javax.swing.JLabel labelNewPackName;
    private javax.swing.JLabel labelPointCostAgility;
    private javax.swing.JLabel labelPointCostArcane;
    private javax.swing.JLabel labelPointCostAttack;
    private javax.swing.JLabel labelPointCostDeath;
    private javax.swing.JLabel labelPointCostDefence;
    private javax.swing.JLabel labelPointCostDivine;
    private javax.swing.JLabel labelPointCostNature;
    private javax.swing.JLabel labelPortrait;
    private javax.swing.JLabel labelSaveTo;
    private javax.swing.JPanel panelPointCost;
    private javax.swing.JScrollPane scrollDescription;
    private javax.swing.JSeparator sep;
    private javax.swing.JSpinner spinnerPointCostAgility;
    private javax.swing.JSpinner spinnerPointCostArcane;
    private javax.swing.JSpinner spinnerPointCostAttack;
    private javax.swing.JSpinner spinnerPointCostDeath;
    private javax.swing.JSpinner spinnerPointCostDefence;
    private javax.swing.JSpinner spinnerPointCostDivine;
    private javax.swing.JSpinner spinnerPointCostNature;
    // End of variables declaration//GEN-END:variables
}
